#include <bits/stdc++.h>
#define ll long long 
#define pb push_back
#define pp pair<ll,ll>
#define mp make_pair
#define si second
#define fi first
#define all(x) x.begin(),x.end()
#define MOD 1000000007
#define MAX 100001
#define f(a,i,n) for(int i=a;i<n;i++)
using namespace std;    
ll fpow(ll n, ll k, ll p = MOD) {ll r = 1; for (; k; k >>= 1) {if (k & 1) r = r * n%p; n = n * n%p;} return r;}
ll inv(ll a, ll p = MOD) {return fpow(a, p - 2, p);}
ll spf[MAX+1];
void sieve()//complexity = approx 3*10^6
{
    f(1,i,MAX) {spf[i]=i;} 
    for(ll i=2;i<MAX;i+=2){spf[i]=2;}
    for(ll i=3;i<MAX;i+=2)
    {
        if(spf[i]==i) //if i is prime mark its multiples with spf as i
        {
            for(ll j=i*i;j<MAX;j+=i)
            {
                spf[j]=min(i,(ll)spf[j]);
            }
        }
    }
}

vector<ll> getFactorization(ll x) 
{ 
    vector<ll> ret; 
    while (x != 1) 
    { 
        ret.push_back(spf[x]); 
        x = x / spf[x]; 
    } 
    return ret; 
} 
set<ll> s;
vector<set<ll> > fac;
map<ll,ll> m;
map<ll, vector< pair<ll,ll> > > vec;
bool compare(const pair<int, int>&i, const pair<int, int>&j)
{
    return i.second < j.second;
}
vector<pair<ll,vector<ll> > > mm;
int main()
{
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    ll b, l, d;
    cin>>b>>l>>d;
    vector<pair<ll,ll> > p1;
    ll x, y, z;
    for(int i=0;i<b;i++)
    {
        s.insert(i);
        cin>>x;
        m[i] = x;
    }
    vector<ll> n, t, num;
    map<ll,vector<ll> > hh;
    //cout<<"ok"<<endl;
    for(int i=0;i<l;i++)
    {
        cin>>x>>y>>z;
        n.pb(x);
        t.pb(y);
        num.pb(z);
        ll id;
        long double avg = 0;
        vector<pair<ll,ll> > v;
        for(int j=0;j<x;j++)
        {
            cin>>id;
            pair<ll,ll> p;
            p.fi = id;
            p.si = m[id];
            if(avg<=d)
                avg += m[id];
            v.pb(p);
        }
        avg = avg*(1.0)/x;
        avg *= z;
        avg -= y;
        //cout<<avg<<endl;
        sort(all(v),compare);
        vec[i] = v;
        pair<ll,long double> rr;
        rr.fi = i;
        rr.si = avg;
        p1.pb(rr);
    }
    sort(all(p1),compare);
    //cout<<l<<endl;
    ll days = d;
    ll count=0;
    for(int i=l-1;i>=0;i--)
    {
        //cout<<p1[i].si<<" avg is"<<endl;
        ll libInd = p1[i].fi;
        //cout<<libInd<<" ";
        ll zero = 0;
        days = max(zero,days - t[libInd]);
        if(days==0)
        {
            break;
        }
        count++;
        vector<pair<ll,ll> > v = vec[libInd];
        ll size = 0;
        ll maxto = num[libInd] * days;
        vector<ll> ele;
        for(int j=v.size()-1;j>=0;j--)
        {
            ll x = v[j].fi;
            if(s.find(x)!=s.end())
            {
                size++;
                ele.pb(x);
                set<ll>::iterator it = s.find(x);
                s.erase(it);
            }
            if(ele.size()==maxto)
            {
                break;
            }
        }
        vector<ll> v2;
        v2.pb(size);
        for(int j=0;j<ele.size();j++)
        {
            v2.pb(ele[j]);
        }
        if(ele.size()==0)
        {
            count--;
        }
        mm.pb(mp(libInd,v2));
        //cout<<endl;
    }
    cout<<count<<endl;
    map<ll, vector<ll> >::iterator e;
    for(int j=0;j<mm.size();j++)
    {
        vector<ll> v = mm[j].si;
        if(v.size()==1)
        {
            continue;
        }
        cout<<mm[j].fi<<" "<<v[0]<<endl;
        for(int i=1;i<v.size();i++)
        {
            cout<<v[i]<<" ";
        }
        if(v.size()>1)
            cout<<endl;
    }
}
/*
6 2 7
1 2 3 6 5 4
5 2 2
0 1 2 3 4
4 3 1
3 2 5 0
*/
