#include <bits/stdc++.h>
#define ll long long 
#define pb push_back
#define pp pair<ll,ll>
#define mp make_pair
#define si second
#define fi first
#define all(x) x.begin(),x.end()
#define MOD 1000000007
#define MAX 100001
#define f(a,i,n) for(int i=a;i<n;i++)
#define sz(x) (int)(x).size()
using namespace std;    
ll fpow(ll n, ll k, ll p = MOD) {ll r = 1; for (; k; k >>= 1) {if (k & 1) r = r * n%p; n = n * n%p;} return r;}
ll inv(ll a, ll p = MOD) {return fpow(a, p - 2, p);}
ll spf[MAX+1];

void setIn(string s) { freopen(s.c_str(),"r",stdin); }
void setOut(string s) { freopen(s.c_str(),"w",stdout); }

void io(string s = "") {
    ios_base::sync_with_stdio(0); cin.tie(0);
    if (sz(s)) {
        setIn(s+".in");
        setOut(s+".out");
    }
}

void sieve()//complexity = approx 3*10^6
{
    f(1,i,MAX) {spf[i]=i;} 
    for(ll i=2;i<MAX;i+=2){spf[i]=2;}
    for(ll i=3;i<MAX;i+=2)
    {
        if(spf[i]==i) //if i is prime mark its multiples with spf as i
        {
            for(ll j=i*i;j<MAX;j+=i)
            {
                spf[j]=min(i,(ll)spf[j]);
            }
        }
    }
}

vector<ll> getFactorization(ll x) 
{ 
    vector<ll> ret; 
    while (x != 1) 
    { 
        ret.push_back(spf[x]); 
        x = x / spf[x]; 
    } 
    return ret; 
} 
set<ll> s;
vector<set<ll> > fac;
map<ll,ll> m;
map<ll, vector< pair<ll,ll> > > vec;
bool compare(const pair<int, int>&i, const pair<int, int>&j)
{
    return i.second < j.second;
}
vector<pair<ll,vector<ll> > > mm;
int main()
{
    io("f_libraries_of_the_world");
    ios_base::sync_with_stdio(false), cin.tie(NULL), cout.tie(NULL);
    ll b, l, d;
    cin>>b>>l>>d;
    vector<pair<ll,ll> > p1;
    
}
